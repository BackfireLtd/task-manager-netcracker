{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["module","exports","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","App","state","columns","title","field","initialEditValue","type","data","getTasks","bind","fetch","then","response","json","console","log","arr","Object","entries","value","push","setState","this","style","maxWidth","icons","editable","onRowAdd","newData","method","body","onRowUpdate","id","onRowDelete","oldData","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f43a9f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MaterialTable from \"material-table\";\nimport {forwardRef} from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref}/>),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>)\n};\nclass App extends React.Component {\n    // state = { data: []}\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [\n                {title: \"Название\", field: \"name\"},\n                {title: \"Описание\", field: \"description\", initialEditValue: 'Initial edit value'},\n                {title: \"Дата создания\", field: \"creationDate\", type: \"date\"},\n                {title: \"Дата выполнения\", field: \"dueDate\", type: \"date\"},\n                {title: \"Статус\", field: \"statusId\"}\n            ],\n            data: []\n        }\n        this.getTasks = this.getTasks.bind(this)\n    }\n   getTasks() {\n     const URL = 'http://localhost:8080/rest/api/tasks';\n     fetch(URL)\n         .then(response => response.json())\n         .then(data => {\n             console.log(data);\n             let arr = [];\n             for (let [key, value] of Object.entries(data)) {\n                 arr.push(value);\n             }\n             this.setState({data: arr});\n         });\n }\n    componentDidMount() {\n    this.getTasks();\n    }\n    render() {\n        return (\n            <div style={{maxWidth: \"100%\"}}>\n                <MaterialTable\n                    title=\"Диспетчер задач\"\n                    columns={this.state.columns}\n                    data={this.state.data}\n                    icons={tableIcons}\n                    editable={{\n                        onRowAdd: newData =>\n                            fetch('http://localhost:8080/rest/api/tasks', {method: 'POST', body: newData.value})\n                                .then(response => response.json())\n                                .then(() => {\n                                    console.log(\"A new task has been added\")\n                                    this.getTasks()\n                                }),\n                        onRowUpdate: (newData) =>\n                            fetch('http://localhost:8080/rest/api/tasks', {\n                                method: 'PUT',\n                                body: newData.value.id,\n                                newData\n                            })\n                                .then(response => response.json())\n                                .then(() => {\n                                    console.log(\"This task has been edited\")\n                                    this.getTasks()\n                                }),\n                        onRowDelete: oldData =>\n                            fetch('http://localhost:8080/rest/api/tasks', {\n                                method: 'DELETE',\n                                body: oldData.value.id\n                            })\n                                .then(response => response.json())\n                                .then(() => {\n                                    console.log(\"This task has been deleted\")\n                                    this.getTasks()\n                                })\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}